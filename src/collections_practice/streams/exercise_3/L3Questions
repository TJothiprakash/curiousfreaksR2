🟠 Level 3 Java Stream Questions (1–40)
📦 Basic Grouping & Partitioning
Group all people by city.

Group all people by employment status.

Count the number of people in each city.

Partition people into adults (age ≥ 30) and minors.

Group names by city.

Count employed vs unemployed people.

Count how many people are in each age group.

Group people by age, then by city.

Group people by first character of their name.

Partition people based on whether their name starts with a vowel.

🔍 Nested Grouping & Mapping
Group people by city and then by employment status.

Group people by city and collect their names.

Group people by city and find the average age.

Group people by city and get max age person in each city.

Group people by city and count how many are employed.

Group people by city and list ages of people.

Group people by city and sum their ages.

Group people by city and collect a Set of names.

Partition people by age ≥ 30 and collect their names.

Group people by city and find total number of employed.

📈 Counting, Reducing, Summarizing
Count number of cities with more than 2 people.

Count how many unique cities are there.

Count how many people are older than 25.

Count people grouped by city where age > 30 only.

Count names starting with same letter using grouping.

Partition people by employment and get sum of their ages.

Find city with most people.

Find city with least employed people.

Find city with maximum average age.

Group people by city and get average name length.

🧠 Custom Collectors Logic
Group people by city and collect people’s names in comma-separated string.

Partition people into even and odd ages.

Group by city and for each, find youngest person.

Group by city and collect sorted names list.

Group by employment status and collect age histogram (map of age → count).

Group by age and check if all from a city.

Count people per city and filter only where count > 1.

Group people by city, then partition by age > 30.

Partition people by employment, then group by city.

Partition people by name length > 4 and count each group.

